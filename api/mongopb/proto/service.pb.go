// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/service.proto

/*
Package mongopb is a generated protocol buffer package.

It is generated from these files:
	proto/service.proto

It has these top-level messages:
	MailMessage
	ContextMessage
	MailRequestMessage
*/
package mongopb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MailMessage struct {
	From        string   `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To          []string `protobuf:"bytes,2,rep,name=to" json:"to,omitempty"`
	Object      string   `protobuf:"bytes,3,opt,name=object" json:"object,omitempty"`
	Content     string   `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Hash        string   `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
	Timestamp   string   `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	Environment string   `protobuf:"bytes,7,opt,name=environment" json:"environment,omitempty"`
	Entity      string   `protobuf:"bytes,8,opt,name=entity" json:"entity,omitempty"`
}

func (m *MailMessage) Reset()                    { *m = MailMessage{} }
func (m *MailMessage) String() string            { return proto.CompactTextString(m) }
func (*MailMessage) ProtoMessage()               {}
func (*MailMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MailMessage) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MailMessage) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *MailMessage) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *MailMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MailMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MailMessage) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MailMessage) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *MailMessage) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

type ContextMessage struct {
	Environment string `protobuf:"bytes,1,opt,name=environment" json:"environment,omitempty"`
	Entity      string `protobuf:"bytes,2,opt,name=entity" json:"entity,omitempty"`
}

func (m *ContextMessage) Reset()                    { *m = ContextMessage{} }
func (m *ContextMessage) String() string            { return proto.CompactTextString(m) }
func (*ContextMessage) ProtoMessage()               {}
func (*ContextMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContextMessage) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ContextMessage) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

type MailRequestMessage struct {
	Mail    *MailMessage    `protobuf:"bytes,1,opt,name=mail" json:"mail,omitempty"`
	Context *ContextMessage `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
}

func (m *MailRequestMessage) Reset()                    { *m = MailRequestMessage{} }
func (m *MailRequestMessage) String() string            { return proto.CompactTextString(m) }
func (*MailRequestMessage) ProtoMessage()               {}
func (*MailRequestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MailRequestMessage) GetMail() *MailMessage {
	if m != nil {
		return m.Mail
	}
	return nil
}

func (m *MailRequestMessage) GetContext() *ContextMessage {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*MailMessage)(nil), "mongopb.MailMessage")
	proto.RegisterType((*ContextMessage)(nil), "mongopb.ContextMessage")
	proto.RegisterType((*MailRequestMessage)(nil), "mongopb.MailRequestMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Mail service

type MailClient interface {
	ReadMails(ctx context.Context, in *ContextMessage, opts ...grpc.CallOption) (Mail_ReadMailsClient, error)
	CreateMail(ctx context.Context, in *MailRequestMessage, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type mailClient struct {
	cc *grpc.ClientConn
}

func NewMailClient(cc *grpc.ClientConn) MailClient {
	return &mailClient{cc}
}

func (c *mailClient) ReadMails(ctx context.Context, in *ContextMessage, opts ...grpc.CallOption) (Mail_ReadMailsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Mail_serviceDesc.Streams[0], c.cc, "/mongopb.Mail/ReadMails", opts...)
	if err != nil {
		return nil, err
	}
	x := &mailReadMailsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Mail_ReadMailsClient interface {
	Recv() (*MailMessage, error)
	grpc.ClientStream
}

type mailReadMailsClient struct {
	grpc.ClientStream
}

func (x *mailReadMailsClient) Recv() (*MailMessage, error) {
	m := new(MailMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mailClient) CreateMail(ctx context.Context, in *MailRequestMessage, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/mongopb.Mail/CreateMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Mail service

type MailServer interface {
	ReadMails(*ContextMessage, Mail_ReadMailsServer) error
	CreateMail(context.Context, *MailRequestMessage) (*google_protobuf.Empty, error)
}

func RegisterMailServer(s *grpc.Server, srv MailServer) {
	s.RegisterService(&_Mail_serviceDesc, srv)
}

func _Mail_ReadMails_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ContextMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MailServer).ReadMails(m, &mailReadMailsServer{stream})
}

type Mail_ReadMailsServer interface {
	Send(*MailMessage) error
	grpc.ServerStream
}

type mailReadMailsServer struct {
	grpc.ServerStream
}

func (x *mailReadMailsServer) Send(m *MailMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _Mail_CreateMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).CreateMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mongopb.Mail/CreateMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).CreateMail(ctx, req.(*MailRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mongopb.Mail",
	HandlerType: (*MailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMail",
			Handler:    _Mail_CreateMail_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadMails",
			Handler:       _Mail_ReadMails_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/service.proto",
}

func init() { proto.RegisterFile("proto/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x6e, 0xe2, 0x40,
	0x0c, 0x86, 0x95, 0x90, 0x85, 0x8d, 0x23, 0x71, 0xf0, 0xae, 0xd8, 0x11, 0xec, 0x01, 0x71, 0xe2,
	0x14, 0x5a, 0x7a, 0xed, 0xa5, 0x42, 0xbd, 0x54, 0xe2, 0x92, 0x37, 0x98, 0x50, 0x13, 0x52, 0x31,
	0x99, 0x90, 0x31, 0x08, 0x9e, 0xa0, 0x8f, 0xd7, 0x57, 0xaa, 0x66, 0x42, 0x28, 0xa9, 0xda, 0xde,
	0xfc, 0xdb, 0xff, 0x7c, 0x63, 0x5b, 0x86, 0x3f, 0x65, 0xa5, 0x59, 0xcf, 0x0c, 0x55, 0x87, 0x7c,
	0x45, 0xb1, 0x53, 0xd8, 0x53, 0xba, 0xc8, 0x74, 0x99, 0x0e, 0x47, 0x99, 0xd6, 0xd9, 0x96, 0x66,
	0x2e, 0x9d, 0xee, 0xd7, 0x33, 0x52, 0x25, 0x9f, 0x6a, 0xd7, 0xe4, 0xcd, 0x83, 0x68, 0x29, 0xf3,
	0xed, 0x92, 0x8c, 0x91, 0x19, 0x21, 0x42, 0xb0, 0xae, 0xb4, 0x12, 0xde, 0xd8, 0x9b, 0x86, 0x89,
	0x8b, 0xb1, 0x0f, 0x3e, 0x6b, 0xe1, 0x8f, 0x3b, 0xd3, 0x30, 0xf1, 0x59, 0xe3, 0x00, 0xba, 0x3a,
	0x7d, 0xa1, 0x15, 0x8b, 0x8e, 0x73, 0x9d, 0x15, 0x0a, 0xe8, 0xad, 0x74, 0xc1, 0x54, 0xb0, 0x08,
	0x5c, 0xa1, 0x91, 0x96, 0xba, 0x91, 0x66, 0x23, 0x7e, 0xd5, 0x54, 0x1b, 0xe3, 0x7f, 0x08, 0x39,
	0x57, 0x64, 0x58, 0xaa, 0x52, 0x74, 0x5d, 0xe1, 0x23, 0x81, 0x63, 0x88, 0xa8, 0x38, 0xe4, 0x95,
	0x2e, 0x94, 0xe5, 0xf5, 0x5c, 0xfd, 0x3a, 0x65, 0xbb, 0xa0, 0x82, 0x73, 0x3e, 0x89, 0xdf, 0x75,
	0x17, 0xb5, 0x9a, 0x3c, 0x41, 0x7f, 0x61, 0xbf, 0x3d, 0x72, 0x33, 0xd3, 0x27, 0x96, 0xf7, 0x13,
	0xcb, 0x6f, 0xb1, 0x76, 0x80, 0x76, 0x39, 0x09, 0xed, 0xf6, 0x64, 0x2e, 0xbc, 0x29, 0x04, 0x4a,
	0xe6, 0x5b, 0x07, 0x8a, 0xe6, 0x7f, 0xe3, 0xf3, 0xa2, 0xe3, 0xab, 0x3d, 0x26, 0xce, 0x81, 0xb7,
	0xe7, 0x8d, 0x1c, 0xd9, 0x81, 0xa3, 0xf9, 0xbf, 0x8b, 0xb9, 0xdd, 0x63, 0xd2, 0xf8, 0xe6, 0xaf,
	0x1e, 0x04, 0x16, 0x84, 0xf7, 0x10, 0x26, 0x24, 0x9f, 0x6d, 0x6c, 0xf0, 0xbb, 0x77, 0xc3, 0x2f,
	0x7f, 0xbf, 0xf1, 0xf0, 0x01, 0x60, 0x51, 0x91, 0x64, 0x72, 0xac, 0x51, 0xcb, 0xd5, 0x1e, 0x67,
	0x38, 0x88, 0xeb, 0x03, 0x89, 0x9b, 0x03, 0x89, 0x1f, 0xed, 0x81, 0xa4, 0x5d, 0xa7, 0xef, 0xde,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x91, 0xe0, 0x9c, 0xdb, 0x5e, 0x02, 0x00, 0x00,
}
